name: CI - build & smoke test API

on:
  push:
  pull_request:

jobs:
  api-build-and-smoke-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Building the API image from Dockerfile.api
      - name: Build Docker image
        run: |
          docker build -f Dockerfile.api -t student-score-api:${{ github.sha }} .

      # Running the container in the background
      - name: Run container
        run: |
          docker run -d --name api -p 8080:8080 student-score-api:${{ github.sha }}
          # give it a moment to boot
          for i in {1..10}; do
            sleep 2
            if curl -sf http://localhost:8080/health >/dev/null; then
              echo "API is healthy"
              exit 0
            fi
            echo "Waiting for API..."
          done
          echo "API failed to become healthy" >&2
          docker logs api || true
          exit 1

      # logs
      - name: Show container logs
        if: always()
        run: docker logs api || true

      - name: Stop container
        if: always()
        run: docker stop api || true

  build-and-push-ecr:
    name: Build & Push to ECR (main only)
    needs: api-build-and-smoke-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: eu-west-2
      ECR_REPO: student-score-api
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::864624564382:role/GitHubActions-ECRPush
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & push to ECR
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile.api
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}:latest
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO }}:${{ github.sha }}
